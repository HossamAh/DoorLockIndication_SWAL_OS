/*
 * AUTOSAR IN Depth Materials
 * www.learn-in-depth.com
 * Eng.Keroles Shenouda
 * eng.keroles.karam@gmail.com
 *
 *
 *
 *
 */
OIL_VERSION = "2.5";

IMPLEMENTATION trampoline {
    /* This fix the default STACKSIZE of tasks */
    TASK {
        UINT32 STACKSIZE = 3000 ;
    } ;

    /* This fix the default STACKSIZE of ISRs */
    ISR {
        UINT32 STACKSIZE = 200 ;
    } ;
};

CPU timer {
  OS config {
    STATUS = EXTENDED;
    
    BUILD = TRUE {
      TRAMPOLINE_BASE_PATH = "../../..";
      APP_SRC = "LearnInDepth_SW.c";
      APP_SRC = "./AUTOSAR_Implementation/Door_Lock_Indication_SWC.c";
      APP_SRC = "./AUTOSAR_Implementation/DoorIndication_ECU_Abstraction_SWC.c";
      APP_SRC = "./AUTOSAR_Implementation/Rte_Door_Lock_Indication_SWC.c";
      APP_SRC = "./AUTOSAR_Implementation/Rte_DoorIndication_ECU_Abstraction_SWC.c";
      APP_SRC = "./AUTOSAR_Implementation/MCAL/DIO.c";
      APP_NAME = "LearnInDepth_SW.axf";
      CFLAGS  = "-O0 -g"; 
      LDFLAGS = "-Map=LearnInDepth_SW.map";
      COMPILER = "arm-none-eabi-gcc";
      ASSEMBLER = "arm-none-eabi-as";
      LINKER = "arm-none-eabi-ld";
      COPIER = "arm-none-eabi-objcopy";
      SYSTEM = PYTHON;
            
    };
    SYSTEM_CALL = TRUE;
    MEMMAP = TRUE {
      COMPILER = gcc;
      LINKER = gnu_ld { SCRIPT = "script.ld"; };
      ASSEMBLER = gnu_as;
      MEMORY_PROTECTION = FALSE;
    };
  };
  
  APPMODE AppStd {};
  	ALARM Time10ms_Alarm {
		ACTION = SETEVENT {
			TASK = ReadDoorT;
			EVENT = Time_10ms_Event;
		};
		AUTOSTART = TRUE {
			ALARMTIME = 10;
			CYCLETIME = 10;
			APPMODE = AppStd;
			};
		
		COUNTER = SystemCounter;
  	};
	EVENT Time_10ms_Event {
		MASK = AUTO;
	};
	EVENT LedSwitchInvokeEvent {
		MASK = AUTO;
	};
	EVENT DoorStateReceivedEvent {
		MASK = AUTO;
	};

	TASK ReadDoorT {
		PRIORITY = 3;
		ACTIVATION = 1;
		SCHEDULE = FULL;
		AUTOSTART = TRUE {
			APPMODE = AppStd;
		};
		EVENT = Time_10ms_Event;
	};
	TASK LEDSwitchTask {
		PRIORITY = 3;
		ACTIVATION = 1;
		SCHEDULE = FULL;
		AUTOSTART = TRUE {
			APPMODE = AppStd;
		};
		EVENT = LedSwitchInvokeEvent;
	};
	TASK DoorLockIndicationTask {
		PRIORITY = 1;
		ACTIVATION = 1;
		SCHEDULE = FULL;
		AUTOSTART = TRUE {
			APPMODE = AppStd;
		};
		EVENT = DoorStateReceivedEvent;
	};
};
